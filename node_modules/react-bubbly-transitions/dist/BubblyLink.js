"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BubblyLink = void 0;

var _client = require("react-dom/client");

var _reactRouterDom = require("react-router-dom");

var _BubblyBubbles = require("./BubblyBubbles");

var _jsxRuntime = require("react/jsx-runtime");

var BubblyLink = function BubblyLink(_ref) {
  var to = _ref.to,
      children = _ref.children,
      _ref$colorStart = _ref.colorStart,
      colorStart = _ref$colorStart === void 0 ? "#8f44fd" : _ref$colorStart,
      _ref$colorEnd = _ref.colorEnd,
      colorEnd = _ref$colorEnd === void 0 ? "#ffffff" : _ref$colorEnd,
      _ref$duration = _ref.duration,
      duration = _ref$duration === void 0 ? 1250 : _ref$duration;
  var navigate = (0, _reactRouterDom.useNavigate)();

  var handleClick = function handleClick(e) {
    e === null || e === void 0 ? void 0 : e.preventDefault();

    if (!document.getElementById("react-bubbly-transitions__bubbles") && window.location.pathname !== to) {
      // change the url in address bar
      window.history.pushState("", "", to); // get access to wave container

      var container = (0, _client.createRoot)(document.getElementById("react-bubbly-transitions__container")); // show the waves

      container.render( /*#__PURE__*/(0, _jsxRuntime.jsx)(_BubblyBubbles.BubblyBubbles, {
        colorStart: colorStart,
        colorEnd: colorEnd,
        duration: duration
      })); // do the route change

      setTimeout(function () {
        return navigate(to);
      }, duration / 2); // half total animation
      // hide the waves

      setTimeout(function () {
        return container.unmount();
      }, duration); // total animation
    }
  };

  return /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
    type: "button",
    className: "react-bubbly-transitions__bubbly-link ".concat(window.location.pathname === to ? "active" : ""),
    onClick: handleClick,
    children: children
  });
};

exports.BubblyLink = BubblyLink;